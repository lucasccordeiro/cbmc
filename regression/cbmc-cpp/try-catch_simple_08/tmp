CBMC version 5.5 64-bit x86_64 linux
Parsing main.cpp
Converting
Type-checking main
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
*** Exception thrown of type struct_CTest at file main.cpp line 19
*** Caught by catch(struct_CTest) at file main.cpp line 26
size of program expression: 78 steps
simple slicing removed 16 assignments
Generated 2 VCC(s), 2 remaining after simplification

Program constraints:
// 23 
// 23 
// 29 
// 30 file <built-in> line 18
(1) SHARED_WRITE(constant_infinity_uint#1) 
// 30 file <built-in> line 18
(2) constant_infinity_uint#1 == 0u
// 31 file <built-in> line 29
(3) SHARED_WRITE(__CPROVER_dead_object#1) 
// 31 file <built-in> line 29
(4) __CPROVER_dead_object#1 == NULL
// 32 file <built-in> line 31
(5) SHARED_WRITE(__CPROVER_deallocated#1) 
// 32 file <built-in> line 31
(6) __CPROVER_deallocated#1 == NULL
// 33 file <built-in> line 9
(7) SHARED_WRITE(__CPROVER_malloc_is_new_array#1) 
// 33 file <built-in> line 9
(8) __CPROVER_malloc_is_new_array#1 == FALSE
// 34 file <built-in> line 32
(9) SHARED_WRITE(__CPROVER_malloc_object#1) 
// 34 file <built-in> line 32
(10) __CPROVER_malloc_object#1 == NULL
// 35 file <built-in> line 33
(11) SHARED_WRITE(__CPROVER_malloc_size#1) 
// 35 file <built-in> line 33
(12) __CPROVER_malloc_size#1 == 0ul
// 36 file <built-in> line 34
(13) SHARED_WRITE(__CPROVER_rounding_mode#1) 
// 36 file <built-in> line 34
(14) __CPROVER_rounding_mode#1 == 0
// 37 
// 37 
// 82 
// 38 
// 39 
// 40 
(15) SHARED_WRITE(this@1#2) 
// 40 
(16) this@1#2 == nondet_symbol(symex::nondet0)
// 41 
// 43 
// 43 
// 43 
// 44 
// 45 
// 46 
(17) SHARED_WRITE(this@1#2) 
// 46 
(18) this@1#2 == nondet_symbol(symex::nondet1)
// 47 
// 49 
// 49 
// 49 
// 50 
// 24 file main.cpp line 22
// 24 file main.cpp line 22
// 1 file main.cpp line 24 function main
// 1 file main.cpp line 24 function main
// 51 file main.cpp line 18 function MyFunc
// 52 file main.cpp line 18 function MyFunc
// 53 file main.cpp line 18 function MyFunc
// 54 file main.cpp line 18 function MyFunc
(19) SHARED_WRITE(this@2#2) 
// 54 file main.cpp line 18 function MyFunc
(20) this@2#2 == &D@1
// 55 
// 57 file main.cpp line 19 function MyFunc
// 58 file main.cpp line 19 function MyFunc
// 59 file main.cpp line 19 function MyFunc
// 60 file main.cpp line 19 function MyFunc
(21) SHARED_WRITE(this@3#2) 
// 60 file main.cpp line 19 function MyFunc
(22) this@3#2 == &tmp_obj$1!0@1
// 61 
// 63 file main.cpp line 19 function MyFunc
(23) ASSERT(tmp_obj$1!0@1#1 != irep("(\"nil\" \"type\" (\"\"))")) 
// 64 file main.cpp line 19 function MyFunc
// 4 file main.cpp line 26 function main
// 5 file main.cpp line 26 function main
// 6 file main.cpp line 26 function main
// 7 file main.cpp line 26 function main
(24) SHARED_WRITE(this@3#5) 
// 7 file main.cpp line 26 function main
(25) this@3#5 == &E@1
// 8 
// 10 file main.cpp line 26 function main
(26) ASSERT(FALSE) 
// 11 file main.cpp line 26 function main
// 12 
// 13 
// 14 
(27) SHARED_WRITE(this@2#2) 
// 14 
(28) this@2#2 == &E@1
// 15 
// 18 
// 21 
(29) main#return_value!0#1 == nondet_symbol(symex::nondet2)
// 22 
// 3 
// 21 
(30) E@1#4 == E@1#2
// 21 
(31) main#return_value!0#2 == nondet_symbol(symex::nondet3)
// 22 
// 25 file main.cpp line 22
(32) return'!0#1 == main#return_value!0#2
// 27 file main.cpp line 22
// 28 
